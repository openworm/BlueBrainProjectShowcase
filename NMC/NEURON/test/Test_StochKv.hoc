usegui = 1

{load_file("stdlib.hoc")}
{load_file("stdgui.hoc")}


create Soma1
create Soma2
create Soma3
create Soma4
create Soma5

access Soma1

celsius = 34

forall {
    pt3dclear() pt3dadd(0.0, 0, 0.0, 13.4715) pt3dadd(0.0, 23.1694, 0.0, 13.4715)
    define_shape()
    Ra = 100
    insert pas 
    { g_pas=3.38e-05 }
    { e_pas=-70 }

}

test_cond_dens =0.000036 
//test_cond_dens =0.0002

Soma2 {
    insert StochKv_deterministic 
    gmax_StochKv_deterministic = test_cond_dens
    ek = -85 
}

Soma3 {
    insert StochKv 
    gkbar_StochKv = 1e4*test_cond_dens
    gamma_StochKv = .1
    deterministic_StochKv = 0
      
    setdata_StochKv(0.5)
    setRNG_StochKv(0,0)
    
    ek = -85 
}


objref rng2
Soma4 {
    insert StochKv_bbp 
    gkbar_StochKv_bbp = 1e4*test_cond_dens
    gamma_StochKv_bbp = .1

    rng2 = new Random()
    rng2.MCellRan4( 1232, 123 )
    rng2.uniform(0,1)
    setdata_StochKv_bbp(0.5)
    setRNG_StochKv_bbp(rng2)
    ek = -85 
}

Soma5 {
    insert StochKv_det 
    gkbar_StochKv_det = 1e4*test_cond_dens
    deterministic_StochKv_det = 1
      
    
    ek = -85 
}


proc initialiseValues0() {

    forall  v = -90

}

objref fih0
{fih0 = new FInitializeHandler(0, "initialiseValues0()")}

objref stim1
objref stim2 
objref stim3 
objref stim4 
objref stim5 

amp = 0.04
Soma1 {
    
    stim1 = new IClamp(0.5)
    stim1.del = 800.0
    stim1.dur = 500.0
    stim1.amp = amp
}

Soma2 {
    stim2 = new IClamp(0.5)
    stim2.del = 800.0
    stim2.dur = 500.0
    stim2.amp = amp
}
Soma3 {
    stim3 = new IClamp(0.5)
    stim3.del = 800.0
    stim3.dur = 500.0
    stim3.amp = amp
}
Soma4 {
    stim4 = new IClamp(0.5)
    stim4.del = 800.0
    stim4.dur = 500.0
    stim4.amp = amp
}
Soma5 {
    stim5 = new IClamp(0.5)
    stim5.del = 800.0
    stim5.dur = 500.0
    stim5.amp = amp
}



tstop = 1600.0
dt = 0.01


objref v_time
objref f_time



objref Soma_v1
{ Soma_v1 = new Vector() }
{ Soma_v1.record(&Soma1.v(0.5))} 


objref GraphWin_0
objref GraphWin_1
objref GraphWin_2
objref GraphWin_3

if (usegui==1) {
    GraphWin_0 = new Graph(0)
    {GraphWin_0.size(0, tstop,-110.0,50.0)}
    {GraphWin_0.view(0, -90, tstop, 40, 80, 330, 330, 250)}
    {
        //GraphWin_0.addexpr("v: Passive", "Soma1.v(0.5)", 1, 1, 0.8, 0.9, 2)
        GraphWin_0.addexpr("v: NeuroML2 - deterministic", "Soma2.v(0.5)", 2, 1, 0.8, 0.9, 2)
        GraphWin_0.addexpr("v: M_Hines - stoch", "Soma3.v(0.5)", 3, 1, 0.8, 0.9, 2)
        GraphWin_0.addexpr("v: M_Hines - deterministic", "Soma5.v(0.5)", 5, 1, 0.8, 0.9, 2)
        GraphWin_0.addexpr("v: BBP", "Soma4.v(0.5)", 4, 1, 0.8, 0.9, 2)
        graphList[0].append(GraphWin_0)
    }

    GraphWin_1 = new Graph(0)
    {GraphWin_1.size(0, tstop,-0.1,1.1)}
    {GraphWin_1.view(0, -0.1, tstop, 1.2, 80, 330, 330, 250)}
    {
        GraphWin_1.addexpr("n:    NeuroML2 - deterministic", "Soma2.n_q_StochKv_deterministic(0.5)", 2, 1, 0.8, 0.9, 2)
        GraphWin_1.addexpr("N1/N: M_Hines - stoch", "Soma3.N1_StochKv(0.5)/Soma3.N_StochKv(0.5)", 3, 1, 0.8, 0.9, 2)
        GraphWin_1.addexpr("n:    M_Hines - deterministic", "Soma5.n_StochKv_det(0.5)", 5, 1, 0.8, 0.9, 2)
        GraphWin_1.addexpr("N1/N: BBP", "Soma4.N1_StochKv_bbp(0.5)/Soma4.N_StochKv_bbp(0.5)", 4, 1, 0.8, 0.9, 2)
        graphList[0].append(GraphWin_1)
    }

    GraphWin_2 = new Graph(0)
    {GraphWin_2.size(0, tstop,-0.1,1.1)}
    {GraphWin_2.view(0, -0.1e-6, tstop, 14e-5, 80, 330, 330, 250)}
    {
        GraphWin_2.addexpr("g: NeuroML2 - deterministic", "Soma2.gion_StochKv_deterministic(0.5)", 2, 1, 0.8, 0.9, 2)
        GraphWin_2.addexpr("g: M_Hines - stoch", "Soma3.gk_StochKv(0.5)*1e-4", 3, 1, 0.8, 0.9, 2)
        GraphWin_2.addexpr("g: M_Hines - deterministic", "Soma5.gk_StochKv_det(0.5)*1e-4", 5, 1, 0.8, 0.9, 2)
        GraphWin_2.addexpr("g: BBP", "Soma4.gk_StochKv_bbp(0.5)*1e-4", 4, 1, 0.8, 0.9, 2)
        graphList[0].append(GraphWin_2)
    }

}

{run()}



if (usegui==1) {
    //   This code pops up a simple Run Control

    {
    xpanel("RunControl", 0)
    v_init = -60.0
    xbutton("Init & Run","run()")
    xbutton("Stop","stoprun=1")
    t = 0
    xvalue("t","t", 2 )
    xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
    dt = 0.01
     xvalue("dt","dt", 1,"setdt()", 0, 1 )
    xpanel(80,80)
    }
}

forall psection()
