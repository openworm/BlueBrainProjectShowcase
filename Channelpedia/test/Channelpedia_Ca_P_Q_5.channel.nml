<neuroml xmlns="http://www.neuroml.org/schema/neuroml2"  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.neuroml.org/schema/neuroml2 https://raw.github.com/NeuroML/NeuroML2/development/Schemas/NeuroML2/NeuroML_v2beta5.xsd" id="Channelpedia_Ca_P_Q_5">
    <ionChannelHH id="Channelpedia_Ca_P_Q_5" species="Ca" conductance="10pS">
        <notes>This is an automated conversion to NeuroML 2 of an ion channel model from Channelpedia. 
The original channel model file can be found at: http://channelpedia.epfl.ch/ionchannels/78

Conversion scripts at https://github.com/OpenSourceBrain/BlueBrainProjectShowcase</notes>
        
        <annotation>
            <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:bqmodel="http://biomodels.net/model-qualifiers/" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/">
                <!-- Automatic conversion of Channelpedia XML file to NeuroML2
Uses: https://github.com/OpenSourceBrain/BlueBrainProjectShowcase/blob/master/Channelpedia/ChannelpediaToNeuroML2.py -->
                <rdf:Description rdf:about="Channelpedia_Ca_P_Q_5">
                    <bqmodel:isDerivedFrom>
                        <rdf:Bag>
                            <!-- Channelpedia channel ID: 78, ModelID: 5; direct link to original XML model -->
                            <rdf:li rdf:resource="http://channelpedia.epfl.ch/ionchannels/78/hhmodels/5.xml"/>
                        </rdf:Bag>
                    </bqmodel:isDerivedFrom>
                    <bqmodel:isDescribedBy>
                        <rdf:Bag>
                            <!-- Channelpedia channel ID: 78; link to main page for channel -->
                            <rdf:li rdf:resource="http://channelpedia.epfl.ch/ionchannels/78"/>
                        </rdf:Bag>
                    </bqmodel:isDescribedBy>
                    <bqmodel:isDescribedBy>
                        <rdf:Bag>
                            <!-- PubMed ID: 11164813 is referenced in original XML
                                 Low-threshold potassium channels and a low-threshold calcium channel regulate Ca2+ spike firing in the dendrites of cerebellar Purkinje neurons: a modeling study. Brain Res., 2001, 891, 106-15 -->
                            <rdf:li rdf:resource="http://identifiers.org/pubmed/11164813"/>
                        </rdf:Bag>
                    </bqmodel:isDescribedBy>
                    <bqbiol:hasTaxon>
                        <rdf:Bag>
                            <!-- Known species: rat; taxonomy id: 10116 -->
                            <rdf:li rdf:resource="http://identifiers.org/taxonomy/10116"/>
                        </rdf:Bag>
                    </bqbiol:hasTaxon>
                    <bqbiol:isPartOf>
                        <rdf:Bag>
                            <!-- Known cell type: cerebellar purkinje; taxonomy id: sao471801888 -->
                            <rdf:li rdf:resource="http://neurolex.org/wiki/sao471801888"/>
                        </rdf:Bag>
                    </bqbiol:isPartOf>
                </rdf:Description>
            </rdf:RDF>
        </annotation>

        <gate id="m" instances="1" type="gateHHrates">
            <forwardRate type="Channelpedia_Ca_P_Q_5_m_alpha"/>
            <reverseRate type="Channelpedia_Ca_P_Q_5_m_beta"/>
        </gate>
    </ionChannelHH>

    <ComponentType name="Channelpedia_Ca_P_Q_5_m_beta" extends="baseVoltageDepRate">
        <Constant name = "TIME_SCALE" value = "1 ms" dimension = "time"/>
        <Constant name = "VOLT_SCALE" value = "1 mV" dimension = "voltage"/>
        <Dynamics>
            <DerivedVariable name="r" dimension="per_time" exposure="r" value="35/(1+exp((V+74)/(14.5)))  / TIME_SCALE"/>
            <DerivedVariable name="V" dimension="none" value="v / VOLT_SCALE"/>
        </Dynamics>
    </ComponentType>


    <ComponentType name="Channelpedia_Ca_P_Q_5_m_alpha" extends="baseVoltageDepRate">
        <Constant name = "TIME_SCALE" value = "1 ms" dimension = "time"/>
        <Constant name = "VOLT_SCALE" value = "1 mV" dimension = "voltage"/>
        <Dynamics>
            <DerivedVariable name="r" dimension="per_time" exposure="r" value="8.5/(1+exp((V-8)/(-12.5))) / TIME_SCALE"/>
            <DerivedVariable name="V" dimension="none" value="v / VOLT_SCALE"/>
        </Dynamics>
    </ComponentType>

</neuroml>
